Creating a Producer using Java API involves three steps:

1) Creating a Producer Object with all the properties we want to pass to the Producer.
2) Creating a ProducerRecord Object which has the name of the topic, key and value of the record we want to send to the Broker.
3) Sending the ProducerRecord Object to the Kafka Broker using Producer Object's send() method.


1) Properties kafkaProps = new Properties();
kafkaProps.put("bootstrap.servers","localhost:9092");
kafkaProps.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
kafkaProps.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");

KafkaProducer<String, String> producer = new KafkaProducer<String, String>(kafkaProps);


2) ProducerRecord<String, String> record = new ProducerRecord<>("CustomerCountry", "Precision Products","France");


3)  producer.send(record);

PARAMETERS which we can confiure in properties file :

buffer.memory
compression.type
retries
ack=0/1/all

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Scala:

import java.util.Properties;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerRecord;

public class TheProducer {
    public static void main(String args[]) {
        produceMessages();
    }
    public static void produceMessages(){
        String topic = "MyTopic"; //Use this topic.
        //Run install once before executing your code
        //Write your code here...
        Properties kafkaProps = new Properties();
kafkaProps.put("bootstrap.servers","localhost:9092");
kafkaProps.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
kafkaProps.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");
KafkaProducer<String, String> producer = new KafkaProducer<String, String>(kafkaProps);
ProducerRecord<String, String> record = new ProducerRecord<>(topic, "Hello","Hello");
producer.send(record);       
    }
}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Python:

from kafka import KafkaProducer
from time import sleep
from json import dumps
import pandas as pd


try:
    producer = KafkaProducer(bootstrap_servers=['<Your Public IP>:9092'],
                             value_serializer=lambda x: dumps(x).encode('utf-8'))
    df = pd.read_csv('Data.csv')
except Exception as e:
    print("An error occurred while initializing the producer or reading the CSV file:", e)
    producer = None
    df = None

if producer and df is not None:
    while True:
        try:
            sample_data = df.sample(1).to_dict(orient='records')[0]
            producer.send('demo_test', value=sample_data)
            sleep(0.1)
        except Exception as e:
            print("An error occurred while sending data to Kafka:", e)

if producer:
    try:
        producer.flush()
    except Exception as e:
        print("An error occurred while flushing the producer:", e)